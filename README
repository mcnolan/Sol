Honestly, I wish you hadn't sent me this. Now I'm going to be accused of stealing ideas from you.
The basic unit of Sol's organisation structure is the hierarchy, infinitely recursive structures, with individually set permissions and visibility. One idea I am going to adapt, I was having trouble with the best way to integrate a leadership role into a stateless manifest. Instead, I'll bind what was originally going to be separate  Simulations right into the hierarchy model. Basically, everything is a tiered hierarchy, and characters can be assigned into them. This means infinite members of staff at every level from task force down to the individual Department on a sim. Each hierarchy can be a member of as many hierarchies as needed, serving many sub-hierarchies if required. Basically, it all looks like a big tree. Note to self: visualisation of tree structure diagram. Large fleets would look very interesting.
From the beginning, I've wanted Sol to be a community driven piece of software. Player's will be able to join the group without actually applying to anything, and work on their bios in what I was originally going to work in as a separate site, a kind of character builder, featuring version control, sort of like a wiki for characters. Each player will have their own profile page, with controls over privacy, visibility and information displayed. If enabled, other players can make comments, leave messages, and read updates on what's happening with the selected players characters. Book-marking players and characters is a must, but I think friend lists and 'favourite characters' might promote bad behaviour. Private messages will also be handled, nothing special there. Characters will be a similar affair with permissions and visibility options. Of course, administration level users will be able to view all characters regardless, for moderation purposes. Each player is allowed to design and build as many characters (PC or NPC) as they require, but administration level options will control how many characters can be 'active' or assigned to a sim at one time. Of course, all this is completely bypassable, if a user wants to just apply and do away with the fleet formalities, they are free to do so, but will get a login for when they wish to make use of it. Bio information will be stored as XML in the database, and will include the metadata for the application form they used. This means if the application form for the group ever changes, the user can make alterations to their character according to what status the join form was in when they actually joined the group. Of course, this means that each hierarchy could also potentially set its own application form, right down to the departmental level. Thats a little further down the track though.
Each hierarchy will allow news/status messages, and if selected (by individual message or hierarchy) users can add comments.
My goal isn't to replace or integrate simm sites, I don't think that's a good idea. However, getting SOAP or xml-rpc working between the two is a late stage feature I'm very interested in doing. Removing as much overhead from the GM's out there is what we write these things for right?
